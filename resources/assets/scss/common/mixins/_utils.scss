

@mixin center($axis: 'both') {
    position: absolute;

    @if $axis == "y" {
        top: 50%;
        @include transform(translateY(-50%));
    }

    @if $axis == "x" {
        left: 50%;
        @include transform(translateX(-50%));
    }

    @if $axis == "both" {
        left: 50%;
        top: 50%;
        @include transform(translate(-50%, -50%));
    }
}

@mixin disabled() {
    @include opacity(.4);

    > * {
        pointer-events: none;
    }
}

.disabled {
    @include disabled;
}

/**
 * Retina Images
 *
 * @example
 * @include image-2x("logo2x.png", 100px, 25px);
 */
@mixin image-2x($image, $width, $height) {
    @media (min--moz-device-pixel-ratio: 1.3),
    (-o-min-device-pixel-ratio: 2.6/2),
    (-webkit-min-device-pixel-ratio: 1.3),
    (min-device-pixel-ratio: 1.3),
    (min-resolution: 1.3dppx) {
        /* on retina, use image that's scaled by 2 */
        background-image: url($image);
        background-size: $width $height;
    }
}

/**
 * Breakpoints
 *
 * @example
 * @include sm-min {
 *     border: 1px solid red;
 * }
 */
@mixin xs-max {
    @media (max-width: $screen-xs-max) {
        @content;
    }
}

@mixin sm-min {
    @media (min-width: $screen-sm-min) {
        @content;
    }
}

@mixin md-min {
    @media (min-width: $screen-md-min) {
        @content;
    }
}

@mixin lg-min {
    @media (min-width: $screen-lg-min) {
        @content;
    }
}

@mixin vertical-align() {
    @include center('y');
}

@mixin desaturate {
	filter: gray;
    @include filter(grayscale(50%));
}

@mixin sticky-footer ($wrapper: ".wrapper", $footer: ".scut-sticky") {
    html, body {
        height: 100%;
        margin: 0;
        padding: 0;
    }

    #{$wrapper} {
        display: table;
        height: 100%;
        width: 100%;
    }

    #{$footer} {
        display: table-row;
        height: 1px;
    }
}


// @note - from bourbon
@function str-replace($string, $search, $replace: "") {
    $index: str-index($string, $search);

    @if $index {
        @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
    }

    @return $string;
}

@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
    $src: null;

    $extmods: (
        eot: "?",
        svg: "#" + str-replace($name, " ", "_")
    );

    $formats: (
        otf: "opentype",
        ttf: "truetype"
    );

    @each $ext in $exts {
        $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
        $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
        $src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
    }

    @font-face {
        font-family: quote($name);
        font-style: $style;
        font-weight: $weight;
        src: $src;
    }
}

@mixin image-rendering($mode: auto) {
    @if ($mode == crisp-edges) {
        -ms-interpolation-mode: nearest-neighbor; // IE8+
        image-rendering: -moz-crisp-edges;
        image-rendering: -o-crisp-edges;
        image-rendering: -webkit-optimize-contrast;
        image-rendering: crisp-edges;
    } @else {
        image-rendering: $mode;
    }
}

@mixin selection($current-selector: false) {
    @if $current-selector {
        &::-moz-selection {
            @content;
        }

        &::selection {
            @content;
        }
    } @else {
        ::-moz-selection {
            @content;
        }

        ::selection {
            @content;
        }
    }
}
